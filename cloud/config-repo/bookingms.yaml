booking:
  message: Hello message from config server, Ola, Hello!


## feign client
#  feign.client.config.default.loggerLevel: full
#  feign.client.config.loggerLevel=FULL
#  feign.client.config.connectTimeout=5000
#  feign.client.config.followRedirects=true
#  feign.client.config.decodeSlash=true
feign:
  client:
    config:
      default:
        loggerLevel: full

## Actuator
### $ curl localhost:8080/actuator/refresh -d {} -H "Content-Type: application/json"
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: '*'

## Service Discovery
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
    healthcheck:
      enabled: true


spring:

  zipkin:
    base-url: "http://localhost:9411/"

  cloud:
    bus:
      enabled: true
      refresh:
        enabled: true

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  datasource:
    url: jdbc:postgresql://localhost:5432/bookingms_db
    #driver-class-name: org.h2.Driver
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
    # The hikari is the default connection pool used by the spring boot
    hikari:
      maximum-pool-size: 10 # Max connections of the pool, by default the value is 10
      minimum-idle: 5 # Min connection of the pool, by default the value is to the 'maximum-pool-size'
      idle-timeout: 10000  # How long extra connections between [maximum-pool-size, minimum-idle] will be kept in the pool. Value is in milliseconds and minimum acceptable value is 10 seconds (10,000 milliseconds)
      auto-commit: false # This property controls the default auto-commit behavior of connections returned from the pool. It is a boolean value. Default: true

  jpa:
    database: postgresql
    open-in-view: false
    show-sql: false

    # Auto If we want to auto generate the database schema automatically then we should enable the two following configuration properties
    # spring.jpa.generate-ddl=true
    # spring.jpa.hibernate.ddl-auto= update # validate | update | create | create-drop
    #generate-ddl: false
    #hibernate:
    #  ddl-auto: none # none | validate | update | create | create-drop,


    properties:
      hibernate:
        format_sql: true
        generate_statistics: false
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        connection:
          provider_disables_autocommit: true # this is a way to improve the performance of the application, # this way the hibernate knows that the connections are already autocommit = false (default value for this property is false)

  flyway:
    enabled: true
    locations: classpath:db/migration


logging:
  level:
    root: INFO
    org:
      hibernate: ERROR
      springframework:
        web:
          servlet:
            DispatcherServlet: DEBUG
#      hibernate: INFO
#      hibernate.SQL: DEBUG
#      hibernate.type.descriptor.sql: TRACE
#      hibernate.stat: DEBUG
#      hibernate.cache: DEBUG
#      hibernate.engine.transaction.internal.TransactionImpl: DEBUG
#      hibernate.engine.jdbc.batch: DEBUG
